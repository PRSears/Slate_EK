<Window x:Class="Slate_EK.Views.InventoryView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="{Binding WindowTitle}" 
        MinWidth="758" MinHeight="350"
        Width="900" Height="640"
        Icon="/Slate_EK;component/Icons/icon_25.ico"
        Background="#494d4f">
    <Window.Resources>
        <ContextMenu x:Key="InventoryBoxContextMenu">
            <MenuItem Header="Retrieve All Fasteners" Command="{Binding ShowAllFastenersCommand}"/>
            <MenuItem Header="Clear Query Results" Command="{Binding ClearQueryResultsCommand}"/>
            <Separator/>
            <MenuItem Header="Edit Selected Fastener(s)" Command="{Binding EditSelectedCommand}"></MenuItem>
            <MenuItem Header="Add New Fastener" Command="{Binding AddNewFastenerCommand}"/>
            <MenuItem Header="Remove Fastener(s)" Command="{Binding RemoveFastenerCommand}" ToolTip="(Del)"/>
            <Separator/>
            <MenuItem Header="Select All" Command="{Binding SelectAllCommand}" ToolTip="(Ctrl + A)"/>
            <MenuItem Header="Deselect All" Command="{Binding SelectNoneCommand}" ToolTip="(Ctrl + D)"/>
            <Separator/>
            <MenuItem Header="Copy" Command="{Binding CopyCommand}" ToolTip="(Ctrl + C)"/>
        </ContextMenu>
        <Style x:Key="ColumnBorder" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="0,0,1,0"></Setter>
            <Setter Property="BorderBrush" Value="#6b6b6b"></Setter>
            <Setter Property="IsHitTestVisible" Value="False"></Setter>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Modifiers="Control" Key="A"
                    Command="{Binding SelectAllCommand}"/>
        <KeyBinding Modifiers="Control" Key="D"
                    Command="{Binding SelectNoneCommand}"/>
        <KeyBinding Modifiers="Control" Key="C"
                    Command="{Binding CopyCommand}"/>
        <KeyBinding Key="Delete"
                    Command="{Binding RemoveFastenerCommand}"/>
        <KeyBinding Modifiers="Control" Key="Q"
                    Command="{Binding ShortcutCtrlQ}"/>
        
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="22"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            
        </Grid.ColumnDefinitions>

        <Menu Grid.Row="0" Grid.Column="0"
              x:Name="InventoryMenu"
              Background="#dddddd"
              Padding="4,0,0,0"
              Height="22"
              VerticalAlignment="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Open A Different Inventory File..." Command="{Binding OpenCommand}"/>
                <Separator/>
                <MenuItem Header="_Import From CSV..." Command="{Binding ImportCommand}"/>
                <MenuItem Header="_Export Visible..." Command="{Binding ExportCommand}"/>
                <Separator/>
                <MenuItem Header="E_xit" Command="{Binding CloseCommand}"/>
            </MenuItem>
            <MenuItem Header="_Tools">
                <MenuItem Header="_Retrieve All Fasteners" Command="{Binding ShowAllFastenersCommand}"/>
                <MenuItem Header="_Clear Query Results" Command="{Binding ClearQueryResultsCommand}"/>
                <Separator/>
                <MenuItem Header="_Submit Changes" Command="{Binding SubmitChangesCommand}"/>
                <MenuItem Header="_Discard Pending Operations" Command="{Binding DiscardChangesCommand}"/>
                <Separator Visibility="{Binding DebugModeVisibilty}"/>
                <MenuItem Header="Drop Database" Command="{Binding DropDatabaseCommand}"
                          ToolTip="In case of emergency, break glass"
                          Visibility="{Binding DebugModeVisibilty}"/>
            </MenuItem>
        </Menu>

        <Grid Grid.Row="1" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="75"/>
                <ColumnDefinition Width="75"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="125"/>
                <ColumnDefinition Width="16"/>
            </Grid.ColumnDefinitions>
            <Grid.Resources>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="Foreground" Value="#dddddd"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="Border"  
                                        CornerRadius="0" 
                                        BorderThickness="0,0,1,0"
                                        Background="Transparent"
                                        BorderBrush="#dddddd">
                                    <ContentPresenter Margin="2"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      RecognizesAccessKey="True"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsKeyboardFocused" Value="true">
                                        <Setter TargetName="Border" Property="BorderBrush" Value="#d0d0d0" />
                                    </Trigger>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter TargetName="Border" Property="BorderBrush" Value="#202020" />
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#566873" />
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="#485963" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="#d0d0d0" />
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter TargetName="Border" Property="Background" Value="#485963" />
                                        <Setter TargetName="Border" Property="BorderBrush" Value="#d0d0d0" />
                                        <Setter Property="Foreground" Value="#999999"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>
            
            <Border Grid.Row="0" Grid.Column="0"
                    Grid.ColumnSpan="10"
                    Height="30"
                    VerticalAlignment="Top"
                    Background="#4f626d"/>

            <Button Grid.Row="0" Grid.Column="0"
                    Content="{Binding QuantityButtonText}"
                    Command="{Binding SortByQuantityCommand}"/>
            <Button Grid.Row="0" Grid.Column="1"
                    Content="{Binding PriceButtonText}"
                    Command="{Binding SortByPriceCommand}"/>
            <Button Grid.Row="0" Grid.Column="2"
                    Content="{Binding MassButtonText}"
                    Command="{Binding SortByMassCommand}"/>
            <Button Grid.Row="0" Grid.Column="3"
                    Content="{Binding SizeButtonText}"
                    Command="{Binding SortBySizeCommand}"/>
            <Button Grid.Row="0" Grid.Column="4"
                    Content="{Binding PitchButtonText}"
                    Command="{Binding SortByPitchCommand}"/>
            <Button Grid.Row="0" Grid.Column="5"
                    Content="{Binding LengthButtonText}"
                    Command="{Binding SortByLengthCommand}"/>
            <Button Grid.Row="0" Grid.Column="6"
                    Content="{Binding MaterialButtonText}"
                    Command="{Binding SortByMaterialCommand}"/>
            <Button Grid.Row="0" Grid.Column="7"
                    Content="{Binding TypeButtonText}"
                    Command="{Binding SortByFastTypeCommand}"/>
            <Button Grid.Row="0" Grid.Column="8"
                    Content="{Binding UnitButtonText}"
                    Command="{Binding SortByUnitCommand}"/>

            <!--<Border Grid.Column="0" Grid.Row="1" Background="DarkGreen"/>
            <Border Grid.Column="1" Grid.Row="1" Background="IndianRed"/>
            <Border Grid.Column="2" Grid.Row="1" Background="DarkBlue"/>
            <Border Grid.Column="3" Grid.Row="1" Background="DarkViolet"/>
            <Border Grid.Column="4" Grid.Row="1" Background="GreenYellow"/>
            <Border Grid.Column="5" Grid.Row="1" Background="Red"/>
            <Border Grid.Column="6" Grid.Row="1" Background="Green"/>
            <Border Grid.Column="7" Grid.Row="1" Background="Blue"/>
            <Border Grid.Column="8" Grid.Row="1" Background="Violet"/>-->

            <ScrollViewer Grid.Row="1" Grid.Column="0"
                        Grid.ColumnSpan="10"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Visible">
                <Grid x:Name="InventoryBox"
                      MouseLeftButtonDown="InventoryBox_LeftMouseDown"
                      MouseLeftButtonUp="InventoryBox_LeftMouseUp"
                      MouseRightButtonUp="InventoryBox_RightMouseUp"
                      MouseMove="InventoryBox_MouseMove"
                      VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch"
                      Background="Transparent"
                      ContextMenu="{StaticResource InventoryBoxContextMenu}">
                    <Border BorderBrush="#649a7f"
                            BorderThickness="4"
                            Visibility="{Binding EditModeVisibility}"/>
                    <StackPanel Orientation="Vertical">
                        <ItemsControl x:Name="InventoryItemsControl"
                                        AlternationCount="2">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid x:Name="InventoryItemContainerGrid">
                                        <Grid.Resources>
                                            <Style TargetType="TextBox"
                                                   BasedOn="{StaticResource DejaVu}">
                                                <Setter Property="Foreground" Value="#dddddd"/>
                                                <Setter Property="CaretBrush" Value="#dddddd"/>
                                                <Setter Property="VerticalAlignment" Value="Center"/>
                                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Right"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                <Setter Property="Padding" Value="8,4,8,4"/>
                                                <Setter Property="Margin" Value="0,0,8,0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="TextBox">
                                                            <Border Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" 
                                                                              BorderBrush="{TemplateBinding BorderBrush}" 
                                                                              Background="{TemplateBinding Background}" 
                                                                              SnapsToDevicePixels="true">
                                                                <ScrollViewer Name="PART_ContentHost" Background="{TemplateBinding Background}" 
                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsEnabled" Value="False">
                                                                    <Setter Property="Background" Value="Transparent"/>
                                                                    <Setter Property="Foreground" Value="#BEDDDDDD"/>
                                                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                                                    <Setter TargetName="PART_ContentHost" Property="Background" Value="Transparent"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" Value="#10FFFFFF"/>
                                                    </Trigger>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter Property="Background" Value="#25FFFFFF"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="75"/>
                                            <ColumnDefinition Width="75"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="100"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="125"/>
                                        </Grid.ColumnDefinitions>
                                        
                                        <Border Grid.Column="0" Grid.ColumnSpan="9"
                                                x:Name="ItemBackground"
                                                Background="{Binding Background}">
                                        </Border>
                                        
                                        <Border Grid.Column="0" Grid.ColumnSpan="9"
                                                ToolTip="{Binding ToolTip}"
                                                BorderThickness="2,0,0,0"
                                                IsHitTestVisible="{Binding NotEditable}">
                                            <Border.Style>
                                                <Style>
                                                    <Setter Property="Border.Background" Value="Transparent"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="Border.IsMouseOver" Value="True">
                                                            <Setter Property="Border.Background" Value="{Binding HoverBackground}"/>
                                                            <Setter Property="Border.BorderBrush" Value="#dddddd"/>
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                        </Border>

                                        <!--<Border Grid.Column="0" Background="Green"/>
                                        <Border Grid.Column="1" Background="Red"/>
                                        <Border Grid.Column="2" Background="Blue"/>
                                        <Border Grid.Column="3" Background="Violet"/>
                                        <Border Grid.Column="4" Background="Yellow"/>
                                        <Border Grid.Column="5" Background="IndianRed"/>
                                        <Border Grid.Column="6" Background="DarkGreen"/>
                                        <Border Grid.Column="7" Background="DarkBlue"/>
                                        <Border Grid.Column="8" Background="BlueViolet"/>-->

                                        <TextBox Grid.Column="0"
                                                 Text="{Binding Fastener.Quantity}"
                                                 GotFocus="UIElement_OnGotFocus"/>
                                        <TextBox Grid.Column="1"
                                                 Text="{Binding Fastener.Price}"
                                                 IsEnabled="{Binding IsEditable}"
                                                 GotFocus="UIElement_OnGotFocus"/>
                                        <TextBox Grid.Column="2"
                                                 Text="{Binding Fastener.MassDisplay}"
                                                 IsEnabled="{Binding IsEditable}"
                                                 GotFocus="UIElement_OnGotFocus"/>
                                        <TextBox Grid.Column="3"
                                                 Text="{Binding Fastener.SizeDisplay}"
                                                 IsEnabled="{Binding IsEditable}"
                                                 GotFocus="UIElement_OnGotFocus"/>
                                        <TextBox Grid.Column="4"
                                                 Text="{Binding Fastener.ShortPitchDisplay}"
                                                 TextWrapping="WrapWithOverflow"
                                                 MaxWidth="66"
                                                 IsEnabled="{Binding IsEditable}"
                                                 GotFocus="UIElement_OnGotFocus"/>
                                        <TextBox Grid.Column="5"
                                                 Text="{Binding Fastener.LengthDisplay}"
                                                 IsEnabled="{Binding IsEditable}"
                                                 GotFocus="UIElement_OnGotFocus"/>
                                        <TextBox Grid.Column="6"
                                                 Text="{Binding Fastener.Material}"
                                                 IsEnabled="{Binding IsEditable}"
                                                 GotFocus="UIElement_OnGotFocus"/>
                                        <TextBox Grid.Column="7"
                                                 Text="{Binding Fastener.Type}"
                                                 IsEnabled="{Binding IsEditable}"
                                                 GotFocus="UIElement_OnGotFocus"/>
                                        <TextBox Grid.Column="8"
                                                 Text="{Binding Fastener.Unit}"
                                                 IsEnabled="{Binding IsEditable}"
                                                 GotFocus="UIElement_OnGotFocus"/>
                                    </Grid>
                                    <DataTemplate.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="{Binding AltBackground}" TargetName="ItemBackground"/>
                                        </Trigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        </StackPanel>
                        <Canvas IsHitTestVisible="False">
                        <Rectangle x:Name="SelectionBox"
                                   Visibility="Collapsed"
                                   Stroke="White"
                                   StrokeThickness="1"
                                   Fill="DarkGray"
                                   Opacity="0.25"/>
                    </Canvas>
                </Grid>
            </ScrollViewer>

            <Border Grid.Row="1" Grid.Column="0" Style="{StaticResource ColumnBorder}"/>
            <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource ColumnBorder}"/>
            <Border Grid.Row="1" Grid.Column="2" Style="{StaticResource ColumnBorder}"/>
            <Border Grid.Row="1" Grid.Column="3" Style="{StaticResource ColumnBorder}"/>
            <Border Grid.Row="1" Grid.Column="4" Style="{StaticResource ColumnBorder}"/>
            <Border Grid.Row="1" Grid.Column="5" Style="{StaticResource ColumnBorder}"/>
            <Border Grid.Row="1" Grid.Column="6" Style="{StaticResource ColumnBorder}"/>
            <Border Grid.Row="1" Grid.Column="7" Style="{StaticResource ColumnBorder}"/>
            <Border Grid.Row="1" Grid.Column="8" Style="{StaticResource ColumnBorder}"/>

        </Grid>
        
        <Border Grid.Row="2" Grid.Column="0"
                Background="#505753"/>
        <DockPanel Grid.Row="2" Grid.Column="0"
                   Margin="10, 0, 10, 0"
                   LastChildFill="False">
            <Label Style="{StaticResource LabelStyle}"
                   FontSize="12"
                   DockPanel.Dock="Left"
                   VerticalContentAlignment="Center"
                   VerticalAlignment="Stretch"
                   Margin="0,0,5,0"
                   Content="Query:"/>
            <ComboBox x:Name="SearchByPropertyDropdown"
                      Style="{StaticResource Dropdown}"
                      Margin="0,-2,0,0"
                      Width="100" Height="26"
                      ItemsSource="{Binding SearchByPropertyList}"
                      SelectedValue="{Binding SelectedSearchProperty, Mode=TwoWay}"
                      DockPanel.Dock="Left"/>
            <TextBox Style="{StaticResource FlatTextFieldStyle}"
                     BorderBrush="#303030"
                     DockPanel.Dock="Left"
                     VerticalContentAlignment="Bottom"
                     x:Name="QueryTextField"
                     Text="{Binding SearchQuery, UpdateSourceTrigger=PropertyChanged}"
                     Padding="5,0,0,4"
                     Width="200" Height="26"
                     Margin="10,0,0,0">
                <TextBox.InputBindings>
                    <KeyBinding Key="Enter" Command="{Binding ExecuteSearchCommand}"/>
                </TextBox.InputBindings>
            </TextBox>
            <Button Style="{StaticResource FlatSearchButton}"
                    DockPanel.Dock="Left"
                    Command="{Binding ExecuteSearchCommand}">
                <Image Source="/Slate_EK;component/Icons/search_black_24.png"/>
            </Button>

            <Button Style="{StaticResource FlatIconButtonStyle}"
                    DockPanel.Dock="Right"
                    Width="40"
                    Margin="10,0,15,0"
                    Command="{Binding DiscardChangesCommand}"
                    ToolTip="Discard changes to the database">
                <Image Source="{Binding DiscardImageSource}"/>
            </Button>
            <Button Style="{StaticResource FlatIconButtonStyle}"
                    DockPanel.Dock="Right"
                    Width="40"
                    Margin="30,0,0,0"
                    Command="{Binding SubmitChangesCommand}"
                    ToolTip="Submit changes to the database">
                <Image Source="{Binding SubmitImageSource}"/>
            </Button>
            <Button Style="{StaticResource FlatIconButtonStyle}"
                    DockPanel.Dock="Right"
                    Command="{Binding RemoveFastenerCommand}"
                    ToolTip="Remove selected item(s) from the collection">
                <Image Source="/Slate_EK;component/Icons/ic_remove_black_24dp_2x.png"/>
            </Button>
            <Button Style="{StaticResource FlatIconButtonStyle}"
                    DockPanel.Dock="Right"
                    Margin="0"
                    Command="{Binding AddNewFastenerCommand}"
                    ToolTip="Add a new listing to the collection">
                <Image Source="/Slate_EK;component/Icons/ic_add_black_24dp_2x.png"/>
            </Button>
        </DockPanel>
    </Grid>
</Window>
